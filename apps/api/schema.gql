# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CategoryInput {
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  updatedAt: DateTime!
}

type CategoryType {
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  updatedAt: DateTime!
}

input CommentInput {
  content: String!
  createdAt: DateTime!
  id: String!
  promptId: String!
  updatedAt: DateTime!
  user: UserInput!
}

type CommentType {
  content: String!
  createdAt: DateTime!
  id: String!
  promptId: String!
  updatedAt: DateTime!
  user: UserType!
}

input CreateCategoryInput {
  description: String!
  name: String!
}

input CreateCommentInput {
  content: String!
  promptId: String!
  userId: String!
}

input CreateLikeInput {
  commentId: String
  promptId: String
  reviewId: String
  userId: String!
}

input CreateLlmInput {
  description: String!
  name: String!
}

input CreatePromptInput {
  content: String!
  description: String!
  example: String!
  published: Boolean!
  title: String!
  userId: String!
}

input CreateReviewInput {
  content: String!
  promptId: String!
  rating: Int!
  userId: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

input CreateUserSettingsInput {
  language: String!
  notifyMarketingEmail: Boolean!
  notifyNewComments: Boolean!
  notifyNewLikes: Boolean!
  notifyNewPrompts: Boolean!
  notifyNewReviews: Boolean!
  theme: String!
  userId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Health {
  isHealthy: Boolean!
}

type Like {
  commentId: String
  createdAt: DateTime!
  id: String!
  promptId: String
  reviewId: String
  updatedAt: DateTime!
  userId: String!
}

input LikeInput {
  commentId: String
  createdAt: DateTime!
  id: String!
  promptId: String
  reviewId: String
  updatedAt: DateTime!
  userId: String!
}

input LlmInput {
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  updatedAt: DateTime!
}

type LlmType {
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  updatedAt: DateTime!
}

type Mutation {
  createCategory(data: CreateCategoryInput!): CategoryType!
  createComment(input: CreateCommentInput!): CommentType!
  createLike(input: CreateLikeInput!): Like!
  createLlm(llm: CreateLlmInput!): LlmType!
  createPrompt(input: CreatePromptInput!): Prompt!
  createReview(review: CreateReviewInput!): ReviewType!
  createUser(input: CreateUserInput!): UserType!
  createUserSettings(createUserSettingsInput: CreateUserSettingsInput!): UserSettings!
  deleteCategory(id: String!): CategoryType!
  deleteComment(id: String!): CommentType!
  deleteLike(id: String!): Like!
  deleteLlm(id: String!): LlmType!
  deletePrompt(id: String!): Prompt!
  deleteReview(id: String!): ReviewType!
  deleteUser(id: String!): UserType!
  deleteUserSettings(id: String!): UserSettings!
  login(email: String!, password: String!): UserType!
  logout(id: String!): UserType!
  register(input: CreateUserInput!): UserType!
  updateCategory(data: UpdateCategoryInput!, id: String!): CategoryType!
  updateComment(content: String!, id: String!): CommentType!
  updateLike(id: String!, input: UpdateLikeInput!): Like!
  updateLlm(id: String!, llm: UpdateLlmInput!): LlmType!
  updatePrompt(id: String!, input: UpdatePromptInput!): Prompt!
  updateReview(id: String!, review: UpdateReviewInput!): ReviewType!
  updateUser(id: String!, input: UpdateUserInput!): UserType!
  updateUserSettings(id: String!, updateUserSettingsInput: UpdateUserSettingsInput!): UserSettings!
}

type Prompt {
  category: CategoryType!
  comments: [CommentType!]
  content: String!
  createdAt: DateTime!
  description: String!
  example: String!
  id: String!
  likes: [Like!]
  llm: LlmType!
  prompt: String!
  published: Boolean!
  reviews: [ReviewType!]
  slug: String!
  tags: [Tag!]!
  title: String!
  updatedAt: DateTime!
  user: UserType!
}

input PromptInput {
  category: CategoryInput!
  comments: [CommentInput!]
  content: String!
  createdAt: DateTime!
  description: String!
  example: String!
  id: String!
  likes: [LikeInput!]
  llm: LlmInput!
  prompt: String!
  published: Boolean!
  reviews: [ReviewInput!]
  slug: String!
  tags: [TagInput!]!
  title: String!
  updatedAt: DateTime!
  user: UserInput!
}

type Query {
  getCategories: [CategoryType!]!
  getCategoryById(id: String!): CategoryType!
  getComments: [CommentType!]!
  getCommentsByPromptId(promptId: String!): [CommentType!]!
  getFavoritesByUserId(userId: String!): [Prompt!]!
  getHealth: Health!
  getLikeById(id: String!): Like!
  getLikes(userId: String!): [Like!]!
  getLikesByPromptId(promptId: String!): [Like!]!
  getLikesByReviewId(reviewId: String!): [Like!]!
  getLikesByUserId(userId: String!): [Like!]!
  getLlmById(id: String!): LlmType!
  getLlms: [LlmType!]!
  getPromptById(id: String!): Prompt!
  getPrompts: [Prompt!]!
  getPromptsByName(name: String!): [Prompt!]!
  getReviewById(id: String!): ReviewType!
  getReviews: [ReviewType!]!
  getTrendingCategories(timePeriod: String!): [CategoryType!]!
  getTrendingPrompts(categoryId: String, timePeriod: String!): [Prompt!]!
  getUser(id: String!): UserType!
  getUserByEmail(email: String!): UserType!
  getUserSettings(userId: String!): UserSettings!
  getUserSettingsById(id: String!): UserSettings!
  getUsers: [UserType!]!
}

input ReviewInput {
  comment: String!
  comments: [CommentInput!]
  createdAt: DateTime!
  id: String!
  likes: Float!
  promptId: String!
  rating: Float!
  updatedAt: DateTime!
  user: UserInput!
}

type ReviewType {
  comment: String!
  comments: [CommentType!]
  createdAt: DateTime!
  id: String!
  likes: Float!
  promptId: String!
  rating: Float!
  updatedAt: DateTime!
  user: UserType!
}

type Tag {
  createdAt: DateTime!
  id: String!
  name: String!
  slug: String!
  updatedAt: DateTime!
}

input TagInput {
  createdAt: DateTime!
  id: String!
  name: String!
  slug: String!
  updatedAt: DateTime!
}

input UpdateCategoryInput {
  description: String!
  name: String!
}

input UpdateLikeInput {
  commentId: String
  promptId: String
  reviewId: String
}

input UpdateLlmInput {
  description: String!
  name: String!
}

input UpdatePromptInput {
  categoryId: String!
  content: String!
  llmId: String!
  title: String!
  userId: String!
}

input UpdateReviewInput {
  comment: String!
  rating: Int!
}

input UpdateUserInput {
  active: Boolean
  avatar: String
  bio: String!
  name: String!
  username: String!
}

input UpdateUserSettingsInput {
  language: String!
  notifyMarketingEmail: Boolean!
  notifyNewComments: Boolean!
  notifyNewLikes: Boolean!
  notifyNewPrompts: Boolean!
  notifyNewReviews: Boolean!
  theme: String!
}

input UserInput {
  active: Boolean = true
  avatar: String
  bio: String
  createdAt: DateTime
  email: String!
  id: String!
  name: String
  updatedAt: DateTime
  userSettings: UserSettingsInput!
  username: String
}

type UserSettings {
  id: String!
  language: String!
  notifyMarketingEmail: Boolean!
  notifyNewComments: Boolean!
  notifyNewLikes: Boolean!
  notifyNewPrompts: Boolean!
  notifyNewReviews: Boolean!
  theme: String!
  userId: String!
}

input UserSettingsInput {
  id: String!
  language: String!
  notifyMarketingEmail: Boolean!
  notifyNewComments: Boolean!
  notifyNewLikes: Boolean!
  notifyNewPrompts: Boolean!
  notifyNewReviews: Boolean!
  theme: String!
  userId: String!
}

type UserType {
  active: Boolean
  avatar: String
  bio: String
  createdAt: DateTime
  email: String!
  id: String!
  name: String
  updatedAt: DateTime
  userSettings: UserSettings!
  username: String
}